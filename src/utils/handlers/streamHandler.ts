import { ChatResponse } from "ollama"
import { ChatParams } from "../index.js"
import { AbortableAsyncIterator } from "ollama/src/utils.js"
import Keys from "../../keys.js"
import { tools } from "./tools/index.js"

/**
 * Method to query the Ollama client for async generation
 * @param params
 * @returns Async
 */
export async function streamResponse(params: ChatParams): Promise<AbortableAsyncIterator<ChatResponse>> {
    return await params.ollama.chat({
        model: Keys.defaultModel,
        messages: params.msgHist,
        options: {
            mirostat: 1,
            mirostat_tau: 2.0,
            top_k: 70
        },
        tools: tools,
        stream: true
    }) as unknown as AbortableAsyncIterator<ChatResponse>
}

/**
 * Method to query the Ollama client for a block response
 * @param params parameters to query the client
 * @returns ChatResponse generated by the Ollama client
 */
export async function blockResponse(params: ChatParams): Promise<ChatResponse> {
    let model = params.model
    if (Keys.systemPrompt) {
        model = 'custom-discord-ollama';
    }
    console.log(`[Ollama: ${model}] Generating response...`)
    return await params.ollama.chat({
        model: model,
        messages: params.msgHist,
        tools: tools,
        stream: false
    })
}
